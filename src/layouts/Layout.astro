---
import BaseHead from "./BaseHead.astro";
const { title, description, image = "/images/portada.png" } = Astro.props;
import "@fontsource/poppins/400.css";
import "@fontsource/poppins/500.css";
import "@fontsource/poppins/600.css";
import "@fontsource/poppins/700.css";
import "@fontsource/poppins/800.css";
import { menuItems } from "@data/nav-menu.js";
import Header from "@sofidevo/astro-dynamic-header/Header";
import Button from "@components/Button.astro";

const pathName = Astro.originPathname;
const normalizedPath =
  typeof pathName === "string" && pathName !== "/"
    ? pathName.replace(/\/+$/g, "")
    : pathName;
const buttonClassName: Record<string, string> = {
  "/": "login-button",
  "/access/login": "button-base",
};

const buttonText: Record<string, string> = {
  "/": "Acceder",
  "/access": "Inicio Sesión",
  "/access/login": "Registrarse",
};

const btnClass = buttonClassName[normalizedPath as string] ?? "button-base";

const btnTextVal =
  buttonText[normalizedPath as string] ??
  (normalizedPath === "/" ? "Acceder" : "Inicio Sesión");
const buttonHref: Record<string, string> = {
  "/": "/access",
  "/access": "/access/login",
  "/access/login": "/access/",
};

const btnHref =
  buttonHref[normalizedPath as string] ??
  (normalizedPath === "/" ? "/access" : "/access/login");
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} image={image} />
  </head>
  <body>
    <Header
      logoSrc="/images/sofilogo.png"
      logoWidth="50px"
      menuItems={menuItems}
      headerType="fullscreen"
    >
      <Button slot="slot-desktop"  class={`button-desktop ${btnClass} `} href={btnHref}>
        {btnTextVal}
      </Button>
      <Button slot="slot-panel"  class={`button-mobile ${btnClass} `} href={btnHref}>
        {btnTextVal}
      </Button>
    </Header>
    <main>
      <slot />
    </main>
  </body>
</html>

<style is:global>
  .button-base {
    background: linear-gradient(to top, rgb(51, 137, 235, 0.6), transparent);
    border: solid 1px rgb(51, 137, 235, 0.5);
  }
  .login-button {
    background: linear-gradient(to top, var(--light-spot-color), transparent);
    border: solid 1px rgb(51, 137, 235, 0.1);
    transition:
      background 0.3s ease,
      border 0.3s ease;
    &:hover {
      background: linear-gradient(to top, rgb(51, 137, 235, 0.6), transparent);
      border: solid 1px rgb(51, 137, 235, 0.5);
    }
  }
  .button-desktop {
    display: inline-flex;
    @media (width < 768px) {
      display: none;
    }
  }
</style>
